{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Dashboard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from 'react-native-elements';\nimport { UserContext } from \"../Context/Context\";\nimport APIservice from \"./services/APIService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LandingPage from \"./LandingPage\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var currentUser = _ref.currentUser,\n      navigation = _ref.navigation,\n      accessToken = _ref.accessToken;\n  var initialState = {\n    email: '',\n    password: ''\n  };\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser,\n      allPosts = _useContext.allPosts,\n      setAllPosts = _useContext.setAllPosts,\n      setIdOfUser = _useContext.setIdOfUser,\n      idOfUser = _useContext.idOfUser,\n      isAuth = _useContext.isAuth,\n      setIsAuth = _useContext.setIsAuth;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  useEffect(function () {\n    getInfo(user.email);\n  }, []);\n\n  var getInfo = function getInfo(email) {\n    var res, firstName, id;\n    return _regeneratorRuntime.async(function getInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(APIservice.getUserByEmail(email));\n\n          case 2:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('problem getting user info');\n            } else {\n              firstName = res.firstName, id = res.id;\n              setName(firstName);\n              setIdOfUser(id);\n              console.log(\"user id \" + id);\n            }\n\n            ;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signout = function signout() {\n    setIsAuth(false);\n    AsyncStorage.removeItem(accessToken, function () {\n      console.log('signedout');\n    });\n    setUser(initialState);\n    setIdOfUser(0);\n  };\n\n  if (isAuth) {\n    return React.createElement(View, {\n      style: [styles.screenContainer],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [styles.welcomeMessage],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Welcome, \", name), React.createElement(Button, {\n      buttonStyle: [styles.buttonsContainer],\n      title: \"See local offers\",\n      onPress: function onPress() {\n        return navigation.navigate('Feed');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      buttonStyle: [styles.buttonsContainer],\n      title: \"New post\",\n      navigation: navigation,\n      onPress: function onPress() {\n        return navigation.navigate('Post');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      buttonStyle: [styles.buttonsContainer],\n      title: \"My profile\",\n      navigation: navigation,\n      onPress: function onPress() {\n        return navigation.push('Profile', {\n          user_id: idOfUser\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      buttonStyle: [styles.buttonsContainer],\n      title: \"Sign out\",\n      onPress: function onPress() {\n        return signout();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    React.createElement(LandingPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 16\n  },\n  welcomeMessage: {\n    fontSize: 40,\n    paddingBottom: 150,\n    paddingLeft: 15\n  },\n  buttonsContainer: {\n    paddingVertical: 10,\n    marginHorizontal: 15,\n    paddingHorizontal: 12\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Dashboard.js"],"names":["React","useState","useEffect","useContext","Button","UserContext","APIservice","AsyncStorage","LandingPage","Dashboard","currentUser","navigation","accessToken","initialState","email","password","user","setUser","allPosts","setAllPosts","setIdOfUser","idOfUser","isAuth","setIsAuth","name","setName","getInfo","getUserByEmail","res","error","alert","firstName","id","console","log","signout","removeItem","styles","screenContainer","welcomeMessage","buttonsContainer","navigate","push","user_id","StyleSheet","create","flex","justifyContent","padding","fontSize","paddingBottom","paddingLeft","paddingVertical","marginHorizontal","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { UserContext } from '../Context/Context'\nimport APIservice from './services/APIService';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport LandingPage from './LandingPage';\n\nconst Dashboard = ({ currentUser, navigation, accessToken }) => {\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const { user, setUser, allPosts, setAllPosts, setIdOfUser, idOfUser, isAuth, setIsAuth } = useContext(UserContext)\n\n  const [name, setName] = useState('');\n  // const [currentUser, setCurrentUser] = useState({\n  //   firstName:'',\n  //   lastName:'',\n  //   email:'',\n  //   id:0\n  // });\n\n\n  useEffect(() => {\n    getInfo(user.email)\n  }, [])\n\n\n  //get user id by the provided email\n  const getInfo = async (email) => {\n    const res = await APIservice.getUserByEmail(email);\n    if (res.error) {\n      alert('problem getting user info');\n    } else {\n      const { firstName, id } = res;\n      // setCurrentUser({\n      //   ...currentUser, \n      //   firstName:firstName, \n      //   id:id\n      // })\n      setName(firstName);\n      setIdOfUser(id)\n      console.log(\"user id \" + id)\n    };\n  };\n\n  const signout = () => {\n    setIsAuth(false);\n    AsyncStorage.removeItem(accessToken, () => { console.log('signedout') });\n    setUser(initialState);\n    setIdOfUser(0);\n\n  }\n\n  if (isAuth) {\n    return (\n      <View style={[styles.screenContainer]}  >\n\n        <Text style={[styles.welcomeMessage]}>Welcome, {name}</Text>\n        <Button\n          buttonStyle={[styles.buttonsContainer]}\n          title='See local offers'\n          onPress={() => navigation.navigate('Feed')}\n        />\n        <Button\n          buttonStyle={[styles.buttonsContainer]}\n          title='New post'\n          navigation={navigation}\n          // currentUser={currentUser}\n          onPress={() => navigation.navigate('Post')}\n        />\n        <Button\n          buttonStyle={[styles.buttonsContainer]}\n          title='My profile'\n          navigation={navigation}\n          onPress={() => navigation.push('Profile', { user_id: idOfUser })}\n        />\n        <Button\n          buttonStyle={[styles.buttonsContainer]}\n          title='Sign out'\n          onPress={() => signout()}\n        />\n      </View>\n    );\n  } else {\n    <LandingPage />\n  }\n};\n\nconst styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 16\n  },\n  welcomeMessage: {\n    fontSize: 40,\n    paddingBottom: 150,\n    paddingLeft: 15,\n  },\n  buttonsContainer: {\n    paddingVertical: 10,\n    marginHorizontal: 15,\n    // backgroundColor: \"#009688\",\n    paddingHorizontal: 12\n  }\n})\n\nexport default Dashboard;\n\n"]},"metadata":{},"sourceType":"module"}