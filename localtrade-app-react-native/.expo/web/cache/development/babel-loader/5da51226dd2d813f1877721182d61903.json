{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport APIservice from \"./services/APIService\";\nimport Dashboard from \"./Dashboard\";\nimport { Input, Button } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar initialState = {\n  email: '',\n  password: ''\n};\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loggedIn = _useState4[0],\n      setLoggedIn = _useState4[1];\n\n  var onLogIn = function onLogIn(e) {\n    var email, password, input, res, accessToken;\n    return _regeneratorRuntime.async(function onLogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = user.email, password = user.password;\n            input = {\n              email: email,\n              password: password\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(APIservice.login(input));\n\n          case 4:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('wrong email or password');\n              setUser(initialState);\n            } else {\n              accessToken = res.accessToken;\n              console.log(accessToken);\n              localStorage.setItem('accessToken', accessToken);\n              setLoggedIn(function (loggedIn) {\n                return !loggedIn;\n              });\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!loggedIn) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      value: user.email,\n      onChangeText: function onChangeText(Email) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          email: Email\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      name: \"password\",\n      value: user.password,\n      onChangeText: function onChangeText(Password) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          password: Password\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      onPress: onLogIn,\n      title: \"Sign in\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(Dashboard, {\n      user: user,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Login.js"],"names":["React","useEffect","useState","APIservice","Dashboard","Input","Button","initialState","email","password","Login","navigation","user","setUser","loggedIn","setLoggedIn","onLogIn","e","input","login","res","error","alert","accessToken","console","log","localStorage","setItem","styles","container","Email","Password","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, TextInput, Text } from 'react-native';\nimport APIservice from './services/APIService';\nimport Dashboard from './Dashboard';\nimport { Input, Button } from 'react-native-elements';\nimport { StyleSheet } from 'react-native';\n\n\nconst initialState= {\n  email:'',\n  password:'',\n}\n\n// need to fix AUTHENTICATION stuff \n// sends access token but i need to confirm\n\n\nconst Login = ({navigation} ) => {\n\n  const [user, setUser]= useState(initialState);\n  const [loggedIn, setLoggedIn] = useState(false)\n\n\n  const onLogIn = async (e) => {\n    const { email, password } = user;\n    const input = { email, password };\n    const res = await APIservice.login(input);\n\n    if (res.error) {\n      alert('wrong email or password');\n      setUser(initialState);\n    } else {\n      const { accessToken } = res;\n      console.log(accessToken);\n      localStorage.setItem('accessToken', accessToken);\n      setLoggedIn(loggedIn => !loggedIn);\n\n    }\n  }\n\n  if (!loggedIn) {\n        return (\n        <View style={styles.container}>\n      {/* <View style={{ flex: 1, justifyContent: 'center' }}> */}\n      {/*TODO - add return button  */}\n            <Input\n          placeholder='Email'\n          name='email'\n          value={user.email}\n              onChangeText={(Email) => setUser({ ...user, email: Email })}\n        />\n        <Input\n          placeholder='Password'\n          secureTextEntry={true}\n          name='password'\n          value={user.password}\n          onChangeText={(Password) => setUser({ ...user, password: Password })}\n        />\n\n        <Button\n          onPress={onLogIn}\n          title=\"Sign in\"\n          // onPress={() => navigation.navigate('Dashboard')}\n        />\n      </View>  \n        )\n      } else {\n          return (\n           <Dashboard user = {user} navigation={navigation}/>\n          )\n          }\n};\n\nexport default Login;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n})"]},"metadata":{},"sourceType":"module"}