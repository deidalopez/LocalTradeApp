{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\myprofile.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Card, Button } from 'react-native-elements';\nimport { UserContext } from \"../Context/Context\";\nimport APIservice from \"./services/APIService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar myprofile = function myprofile(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser,\n      allPosts = _useContext.allPosts,\n      setAllPosts = _useContext.setAllPosts,\n      setIdOfUser = _useContext.setIdOfUser,\n      isAuth = _useContext.isAuth,\n      setIsAuth = _useContext.setIsAuth;\n\n  var _useState = useState({\n    firstName: '',\n    lastName: '',\n    email: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var user_id = route.params.user_id;\n  useEffect(function () {\n    getUserInfo(user_id);\n  }, []);\n\n  var getUserInfo = function getUserInfo(user_id) {\n    var res, firstName, lastName, email;\n    return _regeneratorRuntime.async(function getUserInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(APIservice.getUserById(user_id));\n\n          case 2:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('problem getting user info');\n            } else {\n              console.log(res);\n              firstName = res.firstName, lastName = res.lastName, email = res.email;\n              setCurrentUser(_objectSpread(_objectSpread({}, currentUser), {}, {\n                firstName: firstName,\n                lastName: lastName,\n                email: email\n              }));\n            }\n\n            ;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderPage = function renderPage() {\n    return React.createElement(Card, {\n      key: currentUser.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"User Info\"), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Name: \", currentUser.firstName, \" \", currentUser.lastName), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Email: \", currentUser.email));\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, renderPage());\n};\n\nexport default myprofile;","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/myprofile.js"],"names":["React","useState","useEffect","useContext","Card","Button","UserContext","APIservice","AsyncStorage","myprofile","route","navigation","user","setUser","allPosts","setAllPosts","setIdOfUser","isAuth","setIsAuth","firstName","lastName","email","currentUser","setCurrentUser","user_id","params","getUserInfo","getUserById","res","error","alert","console","log","renderPage"],"mappings":"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","sourcesContent":["import { View, Text } from 'react-native'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Card, Button } from 'react-native-elements';\nimport { UserContext } from '../Context/Context'\nimport APIservice from './services/APIService';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\n\nconst myprofile = ({ route, navigation }) => {\n  const { user, setUser, allPosts, setAllPosts, setIdOfUser, isAuth, setIsAuth } = useContext(UserContext)\n  const [currentUser, setCurrentUser] = useState({ firstName: '', lastName: '', email: '' })\n\n  const { user_id } = route.params\n  useEffect(() => {\n    // console.log(user_id)\n    getUserInfo(user_id)\n  }, [])\n\n  const getUserInfo = async (user_id) => {\n    const res = await APIservice.getUserById(user_id);\n    if (res.error) {\n      alert('problem getting user info');\n    } else {\n      console.log(res)\n      const { firstName, lastName, email } = res;\n      setCurrentUser({\n        ...currentUser,\n        firstName: firstName,\n        lastName: lastName,\n        email: email\n      })\n      // return {\n      //   firstName: firstName,\n      //   lastName:lastName,\n      //   email: email\n      // }\n    };\n  }\n  const renderPage = () => {\n    return (\n      <Card key={currentUser.email}>\n        <Card.Title>User Info</Card.Title>\n        <Card.Divider />\n\n        <Text>Name: {currentUser.firstName} {currentUser.lastName}</Text>\n        <Card.Divider />\n\n        <Text>Email: {currentUser.email}</Text>\n        {/* enter phone number? */}\n        {/* upload user pic? */}\n      </Card>\n    )\n\n  }\n\n\n  return (\n    <View>\n      {renderPage()}\n      {/* <Text></Text> */}\n    </View>\n  )\n}\n\nexport default myprofile\n"]},"metadata":{},"sourceType":"module"}