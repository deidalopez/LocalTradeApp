{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport APIservice from \"./services/APIService\";\nimport Dashboard from \"./Dashboard\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Button } from 'react-native-elements';\nvar initialState = {\n  email: '',\n  password: '',\n  name: ''\n};\n\nvar Register = function Register(props) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loggedIn = _useState4[0],\n      setLoggedIn = _useState4[1];\n\n  var onSignUp = function onSignUp() {\n    var name, email, password, inputuser, res, accessToken;\n    return _regeneratorRuntime.async(function onSignUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = user.name, email = user.email, password = user.password;\n            inputuser = {\n              name: name,\n              email: email,\n              password: password\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(APIservice.register(inputuser));\n\n          case 4:\n            res = _context.sent;\n\n            if (res.error) {\n              alert(\"\" + res.message);\n              setUser(initialState);\n              console.log(res);\n            } else {\n              accessToken = res.accessToken;\n              localStorage.setItem('accessToken', accessToken);\n              setLoggedIn(function (loggedIn) {\n                return !loggedIn;\n              });\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!loggedIn) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(Input, {\n      placeholder: \"Name\",\n      name: \"name\",\n      value: user.name,\n      onChangeText: function onChangeText(Name) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          name: Name\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      value: user.email,\n      onChangeText: function onChangeText(Email) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          email: Email\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      name: \"password\",\n      value: user.password,\n      onChangeText: function onChangeText(Password) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          password: Password\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), React.createElement(Button, {\n      onPress: onSignUp,\n      title: \"Sign Up\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    return React.createElement(Dashboard, {\n      user: user,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Register.js"],"names":["React","useEffect","useState","APIservice","Dashboard","Icon","Input","Button","initialState","email","password","name","Register","props","user","setUser","loggedIn","setLoggedIn","onSignUp","inputuser","register","res","error","alert","message","console","log","accessToken","localStorage","setItem","styles","container","Name","Email","Password","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextInput, View, StyleSheet, AppRegistry } from 'react-native';\nimport APIservice from './services/APIService';\nimport Dashboard from './Dashboard';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Input, Button } from 'react-native-elements';\n\nconst initialState = { email: '', password: '', name:''};\n\nconst Register =(props)=> {\n\n  const [user, setUser] =  useState(initialState)\n\n  const [loggedIn, setLoggedIn] = useState(false)\n\n\n const onSignUp = async () => {\n   const { name, email, password } = user;\n    const inputuser = { name, email, password };\n    const res = await APIservice.register(inputuser);\n    \n    if (res.error){\n      alert(`${res.message}`);\n      setUser(initialState);\n      console.log(res)\n    } else {\n      const { accessToken } = res;\n      localStorage.setItem('accessToken', accessToken);\n      setLoggedIn(loggedIn => !loggedIn);\n    }\n    }\n\n\n  if(!loggedIn){\n\n    return (\n      <View style={styles.container}>\n      <Input\n        placeholder='Name'\n        name='name'\n          value={user.name}\n          onChangeText={(Name) => setUser({ ...user, name: Name })}\n      />\n      <Input\n        placeholder='Email'\n        name='email'\n          value={user.email}\n          onChangeText={(Email) => setUser({ ...user, email: Email })}\n      />\n      <Input\n        placeholder='Password'\n        secureTextEntry={true}\n        name='password'\n          value={user.password}\n          onChangeText={(Password) => setUser({ ...user, password: Password })}\n      />\n\n      <Button\n        onPress={ onSignUp}\n        title=\"Sign Up\"\n      />\n    </View>\n  )\n} else {\n    return (\n      <Dashboard user={user} />\n      )\n    }\n    \n  }\nexport default Register;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n})\n// import React, { Component } from 'react';\n// import { View, Button, TextInput } from 'react-native';\n// import APIservice from '../../services/APIService';\n\n// export default class Register extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: '',\n//       email: '',\n//       password: ''\n//     }\n//     this.onSignUp = this.onSignUp.bind(this);\n//   }\n\n//   onSignUp = async () => {\n//     // e.preventDefault();\n//     const { name, email, password } = this.state;\n//     const user = { name, email, password };\n//     const res = await APIservice.register(user);\n\n//     if (res.error) {\n//       alert(`${res.message}`);\n//     } else {\n//       const { accessToken } = res;\n//       console.log(res);\n//       console.log(accessToken); //returns undefined. \n//       localStorage.setItem('accessToken', accessToken);\n\n//       // indicate we are in\n//       // setIsAuthenticated(true)();\n//       //add something to redirect to dashboard\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <View>\n//         <TextInput\n//           placeholder='Name'\n//           onChangeText={(Name) => this.setState({ name: Name })}\n//         />\n//         <TextInput\n//           placeholder='Email'\n//           onChangeText={(Email) => this.setState({ email: Email })}\n//         />\n//         <TextInput\n//           placeholder='Password'\n//           secureTextEntry={true}\n//           onChangeText={(Password) => this.setState({ password: Password })}\n//         />\n\n//         <Button\n//           onPress={() => this.onSignUp()}\n//           title=\"Sign Up\"\n//         />\n//       </View>\n//     )\n//   }\n// }\n\n\n\n// import React, { useState } from 'react';\n// import { View, Button, TextInput } from 'react-native';\n// import APIservice from '../../services/APIService';\n// import { setIsAuthenticated } from '../../App'\n// const initialState = {\n//     name: '',\n//     email: '',\n//     password: ''\n// }\n\n// const  Register = () => {\n//   const [state, setState] = useState(initialState);\n\n//   // const handleChange = (event) => {\n//   //  const email = event.target;\n//   //   setState((prevState) => ({\n//   //     ...prevState,\n//   //     email: event.target.value,\n//   //   }))\n//   // }\n//   const onSignUp = async (e) => {\n//     e.preventDefault();\n//     const {name, email, password} = state;\n//     const user = { name, email, password };\n//     const res = await APIservice.register(user);\n\n//     if (res.error){\n//       alert(`${res.message}`);\n//     } else {\n//       const { accessToken } = res;\n//       console.log(res);\n//       console.log(accessToken); //returns undefined. \n//       localStorage.setItem('accessToken', accessToken);\n//       setIsAuthenticated(true)();\n//       //add something to redirect to dashboard\n//     }\n//     }\n\n\n//     return (\n//       <View>\n//         <TextInput\n//           placeholder='Name'\n//           // name=\"name\"\n//           // value={state.name}\n//           // onChangeText = {handleChange}\n//           // onChangeText={(Name) => setState({ name: Name })}\n//           onChangeText={(Name) => setState({ ...state, name: Name })}\n//         />\n//         <TextInput\n//           placeholder='Email'\n//           // name=\"email\"\n//           // value={state.email}\n//           // onChangeText={handleChange}\n//           // onChangeText={(Email) => setState({ email: Email })}\n//           onChangeText={(Email) => setState({ ...state, email: Email })}\n//         />\n//         <TextInput\n//           placeholder='Password'\n//           secureTextEntry = {true}\n//           // name=\"password\"\n//           // value={state.password}\n//           // onChangeText={handleChange}\n//           // onChangeText={(Password) => setState({ password: Password })}\n//           onChangeText={(Password) => setState({ ...state, password: Password })}\n//         />\n\n//         <Button \n//           onPress={onSignUp}\n//           title = \"Sign Up\"\n//         />\n//       </View>\n//     )\n  \n// }\n\n"]},"metadata":{},"sourceType":"module"}