{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport APIservice from \"./services/APIService\";\nimport Dashboard from \"./Dashboard\";\nimport { Input, Button } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { UserContext } from \"../Context/Context\";\nvar initialState = {\n  email: '',\n  password: ''\n};\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser,\n      isAuth = _useContext.isAuth,\n      setIsAuth = _useContext.setIsAuth;\n\n  console.log(user);\n\n  var onLogIn = function onLogIn(e) {\n    var email, password, input, res, accessToken;\n    return _regeneratorRuntime.async(function onLogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = user.email, password = user.password;\n            input = {\n              email: email,\n              password: password\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(APIservice.login(input));\n\n          case 4:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('wrong email or password');\n              setUser(initialState);\n              setIsAuth(false);\n            } else {\n              accessToken = res.accessToken;\n              console.log(accessToken);\n              localStorage.setItem('accessToken', accessToken);\n              setIsAuth(true);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!isAuth) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      value: user.email,\n      onChangeText: function onChangeText(email) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          email: email\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      name: \"password\",\n      value: user.password,\n      onChangeText: function onChangeText(password) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          password: password\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      onPress: onLogIn,\n      title: \"Sign in\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Back home\",\n      onPress: function onPress() {\n        return navigation.navigate('Landing');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(Dashboard, {\n      user: user,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Login.js"],"names":["React","useContext","useEffect","useState","APIservice","Dashboard","Input","Button","UserContext","initialState","email","password","Login","navigation","user","setUser","isAuth","setIsAuth","console","log","onLogIn","e","input","login","res","error","alert","accessToken","localStorage","setItem","styles","container","navigate","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { View, TextInput, Text } from 'react-native';\nimport APIservice from './services/APIService';\nimport Dashboard from './Dashboard';\nimport { Input, Button } from 'react-native-elements';\nimport { StyleSheet } from 'react-native';\nimport { UserContext } from '../Context/Context';\n// import {AuthContext} from '../Context/AuthContext'\n\nconst initialState = {\n  email: '',\n  password: '',\n}\n\nconst Login = ({ navigation }) => {\n  const { user, setUser, isAuth, setIsAuth } = useContext(UserContext)\n  // setUser(initialState);\n  console.log(user);\n  const onLogIn = async (e) => {\n    const { email, password } = user;\n    const input = { email, password };\n    const res = await APIservice.login(input);\n    // alert('sent' + res)\n    if (res.error) {\n      alert('wrong email or password');\n      setUser(initialState);\n      setIsAuth(false);\n    } else {\n      const { accessToken } = res;\n      console.log(accessToken);\n      // it works on my  phone if i take the next line out\n      // but then how do you authenticate?\n      localStorage.setItem('accessToken', accessToken);\n      setIsAuth(true);\n    }\n  }\n  //change order of isAuth\n  if (!isAuth) {\n    return (\n      <View style={styles.container}>\n        {/* <View style={{ flex: 1, justifyContent: 'center' }}> */}\n        <Input\n          placeholder='Email'\n          name='email'\n          value={user.email}\n          onChangeText={(email) => setUser({ ...user, email: email })}\n        />\n        <Input\n          placeholder='Password'\n          secureTextEntry={true}\n          name='password'\n          value={user.password}\n          onChangeText={(password) => setUser({ ...user, password: password })}\n        />\n\n        <Button\n          onPress={onLogIn}\n          title=\"Sign in\"\n        // onPress={() => navigation.navigate('Dashboard')}\n        />\n        <Button title='Back home' onPress={() => navigation.navigate('Landing')} />\n      </View>\n    )\n  } else {\n    return (\n      <Dashboard user={user} navigation={navigation} />\n    )\n  }\n};\n\nexport default Login;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n})"]},"metadata":{},"sourceType":"module"}