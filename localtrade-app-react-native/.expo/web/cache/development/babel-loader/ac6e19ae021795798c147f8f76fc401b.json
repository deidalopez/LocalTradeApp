{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Dashboard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input, Button } from 'react-native-elements';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { UserContext } from \"../Context/Context\";\nimport APIservice from \"./services/APIService\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var accessToken = _ref.accessToken,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      allPosts = _useContext.allPosts,\n      setAllPosts = _useContext.setAllPosts,\n      idOfUser = _useContext.idOfUser,\n      setIdOfUser = _useContext.setIdOfUser;\n\n  var _useState = useState({\n    description: '',\n    image_url: '',\n    user_id: idOfUser\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  useEffect(function () {\n    fetch(\"http://localhost:3001/allPosts\").then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      setAllPosts(posts);\n    });\n  }, []);\n\n  var allFeed = function allFeed() {\n    return allPosts.map(function (post) {\n      return React.createElement(View, {\n        key: post.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, post.description), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, post.id));\n    });\n  };\n\n  var getInfo = function getInfo(email) {\n    var res, _name, id;\n\n    return _regeneratorRuntime.async(function getInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(APIservice.getUserByEmail(email));\n\n          case 2:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('problem getting user info');\n            } else {\n              _name = res.name;\n              id = res.id;\n              setName(_name);\n              setIdOfUser(id);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var postCard = function postCard(description, image_url) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, image_url), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, description), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, image_url));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    loadInfo: getInfo(user.email),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Welcome to your dashboard, \", name), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Feed:\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, allFeed()), React.createElement(Button, {\n    title: \"make new post\",\n    onPress: function onPress() {\n      return navigation.navigate('Post');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Dashboard.js"],"names":["React","useState","useEffect","useContext","Input","Button","FlatList","UserContext","APIservice","Dashboard","accessToken","navigation","user","allPosts","setAllPosts","idOfUser","setIdOfUser","description","image_url","user_id","post","setPost","name","setName","fetch","then","res","json","posts","allFeed","map","id","getInfo","email","getUserByEmail","error","alert","postCard","flex","justifyContent","navigate"],"mappings":"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","sourcesContent":["// import { Item } from 'native-base';\nimport React, { useState, useEffect, useContext } from 'react'\nimport { View, TextInput, Text } from 'react-native';\n// import {Container, Card, CardItem, Thumbnail, Body, Text} from 'native-base';\nimport { Input, Button } from 'react-native-elements';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { UserContext } from '../Context/Context'\nimport APIservice from './services/APIService';\n// import styled from 'styled-components'\n\nconst Dashboard = ({ accessToken, navigation }) => {\n\n  const { user, allPosts, setAllPosts, idOfUser, setIdOfUser } = useContext(UserContext)\n  // const [feedPost, setFeedPost] = useState([]);\n\n  const [post, setPost] = useState(\n    {\n      description: '',\n      image_url: '',\n      user_id: idOfUser\n    }\n  )\n\n  const [name, setName] = useState('');\n\n  // useEffect to load all list elements\n  useEffect(() => {\n    fetch(`http://localhost:3001/allPosts`)\n      .then((res) => res.json())\n      .then((posts) => {\n        setAllPosts(posts)\n      })\n  }, [])\n\n  // const allFeed = () => {\n  //   return allPosts.map((post) => {\n  //     return (\n  //       <CardItem key={post.id}>\n  //         <Body>{post.description}</Body>\n  //         {/* <Card.title>{post.id}</Card.title> */}\n  //       </CardItem>\n  //     )\n  //   })\n  // }\n  const allFeed = () => {\n    return allPosts.map((post) => {\n      return (\n        <View key={post.id}>\n          <Text>{post.description}</Text>\n          <Text>{post.id}</Text>\n        </View>\n      )\n    })\n  }\n\n  //get user id by the provided email\n  const getInfo = async (email) => {\n    const res = await APIservice.getUserByEmail(email);\n    if (res.error) {\n      alert('problem getting user info');\n    } else {\n      const { name } = res;\n      const { id } = res;\n      setName(name);\n      setIdOfUser(id)\n    }\n  }\n\n  const postCard = ((description, image_url) => (\n    <View>\n      <Text>{image_url}</Text>\n      <Text>{description}</Text>\n      <Text>{image_url}</Text>\n    </View>\n  ))\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center' }} loadInfo={getInfo(user.email)} >\n      <Text >Welcome to your dashboard, {name}</Text>\n      <Text>Feed:</Text>\n\n      <View>\n        {allFeed()}\n      </View>\n      {/* <Container>\n        {allFeed()}\n        </Container> */}\n      <Button\n        title='make new post'\n        // userId = {userId}\n        onPress={() => navigation.navigate('Post')}\n      />\n    </View>\n  )\n}\n\nexport default Dashboard;\n\n"]},"metadata":{},"sourceType":"module"}