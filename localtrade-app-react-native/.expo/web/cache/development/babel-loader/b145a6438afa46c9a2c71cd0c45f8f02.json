{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Feed.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\n\nvar Feed = function (_Component) {\n  _inherits(Feed, _Component);\n\n  var _super = _createSuper(Feed);\n\n  function Feed() {\n    _classCallCheck(this, Feed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Feed, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(FlatList, {\n        style: styles.listContainer,\n        data: props.postList,\n        renderItem: function renderItem(data) {\n          return React.createElement(ListItem, {\n            title: data.item.post,\n            bottomDivider: true,\n            rightIcon: React.createElement(Icon, {\n              name: \"delete\",\n              size: 36,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 24\n              }\n            }),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      });\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nFeed.navigationOptions = {\n  title: 'Feed'\n};\nvar styles = StyleSheet.create({\n  listContainer: {\n    backgroundColor: '#212121',\n    padding: 16\n  },\n  listText: {\n    fontSize: 30\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.userReducer.postList\n  };\n};\n\nexport default connect(mapStateToProps)(Feed);","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Feed.js"],"names":["React","Component","useDispatch","useSelector","connect","Feed","styles","listContainer","props","postList","data","item","post","navigationOptions","title","StyleSheet","create","backgroundColor","padding","listText","fontSize","mapStateToProps","state","posts","userReducer"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAIMC,I;;;;;;;;;;;;;WAWJ,kBAAS;AAAA;;AACP,aACA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEC,MAAM,CAACC,aAAxB;AACE,QAAA,IAAI,EAAEC,KAAK,CAACC,QADd;AAGE,QAAA,UAAU,EACR,oBAACC,IAAD;AAAA,iBACE,oBAAC,QAAD;AACE,YAAA,KAAK,EAAEA,IAAI,CAACC,IAAL,CAAUC,IADnB;AAEE,YAAA,aAAa,MAFf;AAGE,YAAA,SAAS,EAAE,oBAAC,IAAD;AACT,cAAA,IAAI,EAAC,QADI;AAET,cAAA,IAAI,EAAE,EAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAmBD;;;;EA/BgBX,S;;AAAbI,I,CAKGQ,iB,GAAoB;AACzBC,EAAAA,KAAK,EAAE;AADkB,C;AA8B7B,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,aAAa,EAAE;AACbU,IAAAA,eAAe,EAAE,SADJ;AAEbC,IAAAA,OAAO,EAAE;AAFI,GADgB;AAK/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF;AALqB,CAAlB,CAAf;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBf;AADpB,GAAP;AAGD,CAJD;;AAeA,eAAeL,OAAO,CAACiB,eAAD,CAAP,CAAyBhB,IAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet,\n  FlatList\n} from 'react-native';\n// import { ListItem, Icon } from 'react-native-elements'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\n\n// import { deleteFood } from './actions/food';\n\nclass Feed extends Component {\n\n  // const dispatch = useDispatch();\n\n  // const deleteCurrent = (key) => dispatch(deleteFood(key))\n  static navigationOptions = {\n    title: 'Feed'\n  }\n\n  // const posts = useSelector(state => state.userReducer.postList)\n\n  render() {\n    return (\n    <FlatList style={styles.listContainer}\n      data={props.postList}\n      // keyExtractor={(item, index) => item.key.toString()}\n      renderItem={\n        (data) =>\n          <ListItem\n            title={data.item.post}\n            bottomDivider\n            rightIcon={<Icon\n              name='delete'\n              size={36}\n              // onPress={() => deleteCurrent(data.item.key)} \n              />\n            }\n          />\n      }\n    />\n  );\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  listContainer: {\n    backgroundColor: '#212121',\n    padding: 16\n  },\n  listText: {\n    fontSize: 30\n  },\n});\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.userReducer.postList\n  }\n}\n\n// const mapDispatchProps = (dispatch) => {\n  // return {\n  //   delete: (user) => dispatch(deleteFood(user))\n  // }\n// }\n\n\n\n\nexport default connect(mapStateToProps)(Feed);"]},"metadata":{},"sourceType":"module"}