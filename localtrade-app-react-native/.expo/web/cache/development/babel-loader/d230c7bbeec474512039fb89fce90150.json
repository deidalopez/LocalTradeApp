{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingPage from \"./Components/auth/LandingPage\";\nimport Register from \"./Components/auth/Register\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  useEffect(function () {\n    load();\n  }, []);\n\n  function load() {\n    var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n    return _regeneratorRuntime.async(function load$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context.next = 8;\n              break;\n            }\n\n            setErrorMessage('Access to location is needed to run the app');\n            return _context.abrupt(\"return\");\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 10:\n            location = _context.sent;\n            _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n\n  var Stack = createStackNavigator();\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Landing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Landing\",\n    component: LandingPage,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/App.js"],"names":["StatusBar","React","useEffect","useState","Location","NavigationContainer","createStackNavigator","LandingPage","Register","App","errorMessage","setErrorMessage","load","requestPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","console","log","Stack","headerShown"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEYN,QAAQ,CAAC,IAAD,CAFpB;AAAA;AAAA,MAErBO,YAFqB;AAAA,MAEPC,eAFO;;AAI5BT,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAAeA,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE2BR,QAAQ,CAACS,uBAAT,EAF3B;;AAAA;AAAA;AAEUC,YAAAA,MAFV,yBAEUA,MAFV;;AAAA,kBAGQA,MAAM,KAAK,SAHnB;AAAA;AAAA;AAAA;;AAIMH,YAAAA,eAAe,CAAC,6CAAD,CAAf;AAJN;;AAAA;AAAA;AAAA,6CAO2BP,QAAQ,CAACW,uBAAT,EAP3B;;AAAA;AAOUC,YAAAA,QAPV;AAAA,+BASoCA,QAAQ,CAACC,MAT7C,EASYC,QATZ,oBASYA,QATZ,EASsBC,SATtB,oBASsBA,SATtB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaIC,YAAAA,OAAO,CAACC,GAAR;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,MAAMC,KAAK,GAAGhB,oBAAoB,EAAlC;AAEA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC,WAAxC;AAAqD,IAAA,OAAO,EAAE;AAAEgB,MAAAA,WAAW,EAAE;AAAf,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEf,QAAzC;AAAmD,IAAA,OAAO,EAAE;AAAEe,MAAAA,WAAW,EAAE;AAAf,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingPage from './Components/auth/LandingPage';\nimport Register from './Components/auth/Register';\n\n\nexport default function App() {\n\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  async function load() {\n    try {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMessage('Access to location is needed to run the app');\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync();\n\n      const { latitude, longitude } = location.coords;\n      // alert(`latitude: ${latitude}, longitude: ${longitude}`)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const Stack = createStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Landing'>\n        <Stack.Screen name='Landing' component={LandingPage} options={{ headerShown: false }} />\n        <Stack.Screen name='Register' component={Register} options={{ headerShown: false }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}