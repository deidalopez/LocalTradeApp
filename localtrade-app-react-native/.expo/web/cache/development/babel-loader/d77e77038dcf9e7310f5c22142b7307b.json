{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport APIservice from \"./services/APIService\";\nimport Dashboard from \"./Dashboard\";\nimport { Input, Button } from 'react-native-elements';\nimport { UserContext } from \"../Context/Context\";\nimport * as Location from 'expo-location';\nvar initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  location: null\n};\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser,\n      isAuth = _useContext.isAuth,\n      setIsAuth = _useContext.setIsAuth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var onSignUp = function onSignUp() {\n    var firstName, lastName, email, password, inputuser, res, accessToken;\n    return _regeneratorRuntime.async(function onSignUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firstName = user.firstName, lastName = user.lastName, email = user.email, password = user.password;\n            inputuser = {\n              firstName: firstName,\n              lastName: lastName,\n              email: email,\n              password: password\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(APIservice.register(inputuser));\n\n          case 4:\n            res = _context.sent;\n\n            if (res.error) {\n              alert(\"\" + res.message);\n              setUser(initialState);\n              console.log(res);\n            } else {\n              accessToken = res.accessToken;\n              localStorage.setItem('accessToken', accessToken);\n              setIsAuth(true);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n    return _regeneratorRuntime.async(function getLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context2.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context2.next = 8;\n              break;\n            }\n\n            setErrorMessage('Access to location is needed to run the app');\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 10:\n            location = _context2.sent;\n            setUser;\n            _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n            alert(\"latitude: \" + latitude + \", longitude: \" + longitude);\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  if (!isAuth) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, React.createElement(Input, {\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      value: user.firstName,\n      onChangeText: function onChangeText(firstName) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          firstName: firstName\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      value: user.lastName,\n      onChangeText: function onChangeText(lastName) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          lastName: lastName\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      value: user.email,\n      onChangeText: function onChangeText(Email) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          email: Email\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      name: \"password\",\n      value: user.password,\n      onChangeText: function onChangeText(Password) {\n        return setUser(_objectSpread(_objectSpread({}, user), {}, {\n          password: Password\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      onPress: onSignUp,\n      title: \"Sign Up\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Back home\",\n      onPress: function onPress() {\n        return navigation.navigate('Landing');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(Dashboard, {\n      user: user,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Register.js"],"names":["React","useEffect","useState","useContext","APIservice","Dashboard","Input","Button","UserContext","Location","initialState","firstName","lastName","email","password","location","Register","navigation","user","setUser","isAuth","setIsAuth","loggedIn","setLoggedIn","onSignUp","inputuser","register","res","error","alert","message","console","log","accessToken","localStorage","setItem","getLocation","requestPermissionsAsync","status","setErrorMessage","getCurrentPositionAsync","coords","latitude","longitude","styles","container","Email","Password","navigate","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;AAEA,OAAOC,UAAP;AACA,OAAOC,SAAP;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,SAASC,WAAT;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,oBAEUd,UAAU,CAACK,WAAD,CAFpB;AAAA,MAE3BU,IAF2B,eAE3BA,IAF2B;AAAA,MAErBC,OAFqB,eAErBA,OAFqB;AAAA,MAEZC,MAFY,eAEZA,MAFY;AAAA,MAEJC,SAFI,eAEJA,SAFI;;AAAA,kBAMHnB,QAAQ,CAAC,KAAD,CANL;AAAA;AAAA,MAM5BoB,QAN4B;AAAA,MAMlBC,WANkB;;AASnC,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACPb,YAAAA,SADO,GACkCO,IADlC,CACPP,SADO,EACIC,QADJ,GACkCM,IADlC,CACIN,QADJ,EACcC,KADd,GACkCK,IADlC,CACcL,KADd,EACqBC,QADrB,GACkCI,IADlC,CACqBJ,QADrB;AAETW,YAAAA,SAFS,GAEG;AAAEd,cAAAA,SAAS,EAATA,SAAF;AAAaC,cAAAA,QAAQ,EAARA,QAAb;AAAuBC,cAAAA,KAAK,EAALA,KAAvB;AAA8BC,cAAAA,QAAQ,EAARA;AAA9B,aAFH;AAAA;AAAA,6CAGGV,UAAU,CAACsB,QAAX,CAAoBD,SAApB,CAHH;;AAAA;AAGTE,YAAAA,GAHS;;AAIf,gBAAIA,GAAG,CAACC,KAAR,EAAe;AACbC,cAAAA,KAAK,MAAIF,GAAG,CAACG,OAAR,CAAL;AACAX,cAAAA,OAAO,CAACT,YAAD,CAAP;AAEAqB,cAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACD,aALD,MAKO;AACGM,cAAAA,WADH,GACmBN,GADnB,CACGM,WADH;AAELC,cAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,WAApC;AACAZ,cAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAbc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAgBA,MAAMe,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEO3B,QAAQ,CAAC4B,uBAAT,EAFP;;AAAA;AAAA;AAEVC,YAAAA,MAFU,yBAEVA,MAFU;;AAAA,kBAGZA,MAAM,KAAK,SAHC;AAAA;AAAA;AAAA;;AAIdC,YAAAA,eAAe,CAAC,6CAAD,CAAf;AAJc;;AAAA;AAAA;AAAA,6CAOO9B,QAAQ,CAAC+B,uBAAT,EAPP;;AAAA;AAOVzB,YAAAA,QAPU;AAQhBI,YAAAA,OAAO;AARS,+BASgBJ,QAAQ,CAAC0B,MATzB,EASRC,QATQ,oBASRA,QATQ,EASEC,SATF,oBASEA,SATF;AAYhBd,YAAAA,KAAK,gBAAca,QAAd,qBAAsCC,SAAtC,CAAL;AAZgB;AAAA;;AAAA;AAAA;AAAA;AAehBZ,YAAAA,OAAO,CAACC,GAAR;;AAfgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAqBA,MAAI,CAACZ,MAAL,EAAa;AACX,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEwB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,KAAK,EAAE3B,IAAI,CAACP,SAHd;AAIE,MAAA,YAAY,EAAE,sBAACA,SAAD;AAAA,eAAeQ,OAAO,iCAAMD,IAAN;AAAYP,UAAAA,SAAS,EAAEA;AAAvB,WAAtB;AAAA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,WADd;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEO,IAAI,CAACN,QAHd;AAIE,MAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,eAAcO,OAAO,iCAAMD,IAAN;AAAYN,UAAAA,QAAQ,EAAEA;AAAtB,WAArB;AAAA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAaE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEM,IAAI,CAACL,KAHd;AAIE,MAAA,YAAY,EAAE,sBAACiC,KAAD;AAAA,eAAW3B,OAAO,iCAAMD,IAAN;AAAYL,UAAAA,KAAK,EAAEiC;AAAnB,WAAlB;AAAA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAmBE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,eAAe,EAAE,IAFnB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAE5B,IAAI,CAACJ,QAJd;AAKE,MAAA,YAAY,EAAE,sBAACiC,QAAD;AAAA,eAAc5B,OAAO,iCAAMD,IAAN;AAAYJ,UAAAA,QAAQ,EAAEiC;AAAtB,WAArB;AAAA,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EA2BE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEvB,QADX;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA+BE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMP,UAAU,CAAC+B,QAAX,CAAoB,SAApB,CAAN;AAAA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,CADF;AAoCD,GArCD,MAqCO;AACL,WACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE9B,IAAjB;AAAuB,MAAA,UAAU,EAAED,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;AACF,CAxFD;;AA0FA,eAAeD,QAAf;AAOA,IAAM4B,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { TextInput, View, StyleSheet, AppRegistry } from 'react-native';\nimport APIservice from './services/APIService';\nimport Dashboard from './Dashboard';\n// import Icon from 'react-native-vector-icons/FontAwesome';\nimport { Input, Button } from 'react-native-elements';\nimport { UserContext } from '../Context/Context'\nimport * as Location from 'expo-location';\n\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  // name:'',\n  location: null\n};\n// const initialState = { firstName: '', lastName: '', email: '', password: '', name:'', location:null};\n\nconst Register = ({ navigation }) => {\n\n  const { user, setUser, isAuth, setIsAuth } = useContext(UserContext)\n\n  // const [newUser, setNewUser] =  useState(initialState)\n\n  const [loggedIn, setLoggedIn] = useState(false)\n\n\n  const onSignUp = async () => {\n    const { firstName, lastName, email, password } = user;\n    const inputuser = { firstName, lastName, email, password };\n    const res = await APIservice.register(inputuser);\n    if (res.error) {\n      alert(`${res.message}`);\n      setUser(initialState)\n      // setUser(initialState);\n      console.log(res)\n    } else {\n      const { accessToken } = res;\n      localStorage.setItem('accessToken', accessToken);\n      setIsAuth(true)\n    }\n  }\n\n  const getLocation = async () => {\n    try {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMessage('Access to location is needed to run the app');\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync();\n      setUser\n      const { latitude, longitude } = location.coords;\n      // setPost({...post, postLocation:location})\n      // setPost({...post, location.latitude:latitude, location.longitude:longitude})\n      alert(`latitude: ${latitude}, longitude: ${longitude}`)\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n\n  if (!isAuth) {\n    return (\n      <View style={styles.container}>\n        <Input\n          placeholder='First Name'\n          name='firstName'\n          value={user.firstName}\n          onChangeText={(firstName) => setUser({ ...user, firstName: firstName })}\n        />\n        <Input\n          placeholder='Last Name'\n          name='lastName'\n          value={user.lastName}\n          onChangeText={(lastName) => setUser({ ...user, lastName: lastName })}\n        />\n        <Input\n          placeholder='Email'\n          name='email'\n          value={user.email}\n          onChangeText={(Email) => setUser({ ...user, email: Email })}\n        />\n        <Input\n          placeholder='Password'\n          secureTextEntry={true}\n          name='password'\n          value={user.password}\n          onChangeText={(Password) => setUser({ ...user, password: Password })}\n        />\n\n        <Button\n          onPress={onSignUp}\n          title=\"Sign Up\"\n        />\n        <Button title='Back home' onPress={() => navigation.navigate('Landing')} />\n\n      </View>\n    )\n  } else {\n    return (\n      <Dashboard user={user} navigation={navigation} />\n    )\n  }\n}\n\nexport default Register;\n// <Dashboard user={user} navigation={navigation}/>\n\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n})\n"]},"metadata":{},"sourceType":"module"}