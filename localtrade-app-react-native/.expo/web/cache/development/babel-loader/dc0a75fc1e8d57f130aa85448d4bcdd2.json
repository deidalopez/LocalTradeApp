{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Dashboard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-elements';\nimport { UserContext } from \"../Context/Context\";\nimport APIservice from \"./services/APIService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LandingPage from \"./LandingPage\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var currentUser = _ref.currentUser,\n      navigation = _ref.navigation,\n      accessToken = _ref.accessToken;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      allPosts = _useContext.allPosts,\n      setAllPosts = _useContext.setAllPosts,\n      setIdOfUser = _useContext.setIdOfUser,\n      isAuth = _useContext.isAuth,\n      setIsAuth = _useContext.setIsAuth;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  useEffect(function () {\n    getInfo(user.email);\n  }, []);\n\n  var getInfo = function getInfo(email) {\n    var res, firstName, id;\n    return _regeneratorRuntime.async(function getInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(APIservice.getUserByEmail(email));\n\n          case 2:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('problem getting user info');\n            } else {\n              firstName = res.firstName, id = res.id;\n              setName(firstName);\n              setIdOfUser(id);\n              console.log(\"user id \" + id);\n            }\n\n            ;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signout = function signout() {\n    setIsAuth(false);\n    AsyncStorage.removeItem(accessToken, function () {\n      alert('signedout');\n    });\n  };\n\n  if (isAuth) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Welcome, \", name), React.createElement(Button, {\n      title: \"See local offers\",\n      onPress: function onPress() {\n        return navigation.navigate('Feed');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"New post\",\n      navigation: navigation,\n      onPress: function onPress() {\n        return navigation.navigate('Post');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"My profile\",\n      navigation: navigation,\n      onPress: function onPress() {\n        return navigation.navigate('Post');\n      },\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Signout\",\n      onPress: function onPress() {\n        return signout();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    React.createElement(LandingPage, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Dashboard.js"],"names":["React","useState","useEffect","useContext","Button","UserContext","APIservice","AsyncStorage","LandingPage","Dashboard","currentUser","navigation","accessToken","user","allPosts","setAllPosts","setIdOfUser","isAuth","setIsAuth","name","setName","getInfo","email","getUserByEmail","res","error","alert","firstName","id","console","log","signout","removeItem","flex","justifyContent","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { UserContext } from '../Context/Context'\nimport APIservice from './services/APIService';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nimport LandingPage from './LandingPage';\nconst Dashboard = ({ currentUser, navigation, accessToken }) => {\n\n  const { user, allPosts, setAllPosts, setIdOfUser, isAuth, setIsAuth } = useContext(UserContext)\n\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getInfo(user.email)\n  }, [])\n\n  //get user id by the provided email\n  const getInfo = async (email) => {\n    const res = await APIservice.getUserByEmail(email);\n    if (res.error) {\n      alert('problem getting user info');\n    } else {\n      const { firstName, id } = res;\n\n      setName(firstName);\n      setIdOfUser(id)\n      console.log(\"user id \" + id)\n    };\n  };\n\n  const signout = () => {\n    setIsAuth(false);\n    AsyncStorage.removeItem(accessToken, () => { alert('signedout') });\n  }\n\n  if (isAuth) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center' }}  >\n\n        <Text>Welcome, {name}</Text>\n        <Button title='See local offers'\n          onPress={() => navigation.navigate('Feed')}\n        />\n        <Button\n          title='New post'\n          navigation={navigation}\n          // currentUser={currentUser}\n          onPress={() => navigation.navigate('Post')}\n        />\n        <Button\n          title='My profile'\n          navigation={navigation}\n          onPress={() => navigation.navigate('Post')}\n          style={{}}\n        />\n        <Button\n          title='Signout'\n          onPress={() => signout()}\n        />\n      </View>\n    );\n  } else {\n    <LandingPage />\n  }\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}