{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\18053\\\\Documents\\\\codeworks\\\\projects\\\\LocalTradeApp\\\\localtrade-app-react-native\\\\Components\\\\Dashboard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input, Button } from 'react-native-elements';\nimport APIservice from \"./services/APIService\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var user = _ref.user,\n      navigation = _ref.navigation;\n\n  var _useState = useState({\n    \"email\": user.email,\n    \"allpost\": [],\n    \"name\": ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userDash = _useState2[0],\n      setUserDash = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userId = _useState6[0],\n      setUserId = _useState6[1];\n\n  var getInfo = function getInfo(email) {\n    var res, _name, id;\n\n    return _regeneratorRuntime.async(function getInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(APIservice.getUserByEmail(email));\n\n          case 2:\n            res = _context.sent;\n\n            if (res.error) {\n              alert('problem getting user info');\n            } else {\n              _name = res.name;\n              id = res.id;\n              setName(_name);\n              setUserId(id);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {}, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Welcome to your dashboard, \", name), React.createElement(Button, {\n    title: \"make new post\",\n    userId: userId,\n    onPress: function onPress() {\n      return navigation.navigate('Post');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: getInfo(user.email),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/18053/Documents/codeworks/projects/LocalTradeApp/localtrade-app-react-native/Components/Dashboard.js"],"names":["React","useState","useEffect","Input","Button","APIservice","Dashboard","user","navigation","email","userDash","setUserDash","name","setName","userId","setUserId","getInfo","getUserByEmail","res","error","alert","id","flex","justifyContent","navigate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAMA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AAMA,OAAOC,UAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBACTP,QAAQ,CAAC;AACvC,aAAQM,IAAI,CAACE,KAD0B;AAEvC,eAAU,EAF6B;AAGvC,YAAO;AAHgC,GAAD,CADC;AAAA;AAAA,MAClCC,QADkC;AAAA,MACxBC,WADwB;;AAAA,mBAOjBV,QAAQ,CAAC,EAAD,CAPS;AAAA;AAAA,MAOlCW,IAPkC;AAAA,MAO5BC,OAP4B;;AAAA,mBAQbZ,QAAQ,CAAC,CAAD,CARK;AAAA;AAAA,MAQlCa,MARkC;AAAA,MAQ1BC,SAR0B;;AAWzC,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAQP,KAAR;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEIJ,UAAU,CAACY,cAAX,CAA0BR,KAA1B,CAFJ;;AAAA;AAERS,YAAAA,GAFQ;;AAId,gBAAGA,GAAG,CAACC,KAAP,EAAc;AACZC,cAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,aAFD,MAEO;AACER,cAAAA,KADF,GACUM,GADV,CACEN,IADF;AAEES,cAAAA,EAFF,GAEQH,GAFR,CAEEG,EAFF;AAMLR,cAAAA,OAAO,CAACD,KAAD,CAAP;AACAG,cAAAA,SAAS,CAACM,EAAD,CAAT;AACD;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAsBAnB,EAAAA,SAAS,CAAC,YAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;AAIE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAmCX,IAAnC,CADF,EAGE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,MAAM,EAAIE,MAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACgB,QAAX,CAAoB,MAApB,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAIR,OAAO,CAACT,IAAI,CAACE,KAAN,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAcH,CAnDD;;AAqDA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View, \n  TextInput,\n  Text\n} from 'react-native';\nimport { Input, Button } from 'react-native-elements';\n\n// import * as Font from 'expo-font';\n\n// import { Container, Header, Content, Button, Text } from 'native-base';\n\nimport APIservice from './services/APIService';\n\nconst Dashboard = ({ user, navigation}) => {\n  const [userDash, setUserDash] = useState({\n    \"email\":user.email,\n    \"allpost\":[], \n    \"name\":'',\n    // \"userId\":0\n  })\n  const [name, setName] = useState('');\n  const [userId, setUserId] = useState(0);\n\n//getUserByemail\n  const getInfo = async  (email) => {\n    // const {email} = userDash ;\n    const res = await APIservice.getUserByEmail(email);\n\n    if(res.error) {\n      alert('problem getting user info');\n    } else {\n      const {name} = res;\n      const {id} = res;\n\n      // userName= name\n      // alert(name);\n      setName(name)\n      setUserId(id)\n    }\n  }\n\n// get ALL posts (regardless of who posted them)\n// add them to a 'feed' array? \n\n\n//loadPosts\n  useEffect(()=>{\n\n  },[])\n\n    return (\n      <View style={{ flex: 1, justifyContent: 'center' }}>\n        <Text >Welcome to your dashboard, {name}</Text>\n        {/* display all posts/feed */}\n        <Button \n          title='make new post' \n          userId = {userId}\n          onPress={() => navigation.navigate('Post')}\n        />\n        {/* loading user info BUT not on the press of the button and idk why*/}\n        <Button \n        onPress = {getInfo(user.email)} />\n      </View>\n    )\n}\n\nexport default Dashboard;\n\n\n// import React, { Component } from 'react'\n// import {\n//   StyleSheet,\n//   View,\n//   TextInput,\n//   Text,\n//   TouchableOpacity,\n//   Image } from 'react-native';\n// // import { connect } from 'react-redux';\n// // import { useDispatch } from 'react-redux';\n// // import {createPost} from './redux/actions/index'\n// // import { bindActionCreators } from 'redux';\n// import APIservice from '../../services/APIService';\n// // import { onUserLogin} from './redux/actions/index';\n\n\n// export default class Dashboard extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       userInput: {email: this.props.email, password:this.props.password},\n//       email: this.props.email,\n//       password: this.props.password, \n//       posts:[]\n//     }\n//   }\n//   componentDidMount() {\n//     console.log(this.props.user)\n//     // this.props.onUserLogin(this.state.userInput);\n//   }\n\n//   // const dispatch = useDispatch();\n//   // const submitPost = (post)=>this.dispatch(createPost(post));\n\n//   // onRender = async () => {\n    \n//   //   const {_id} = user;\n//   //   const res = await APIservice.fetchUser(_id);\n//   //   console.log(res.name)\n//   // }\n\n\n\n//   render() {\n//     // const { currentUser } = this.props;\n//     // console.log(currentUser)\n//     return (\n//         <View style={{ flex: 1, justifyContent: 'center' }}>\n//           <Text>{this.state.email}</Text>\n//           <Text>  is logged in. This is the feed</Text>\n//           <TextInput \n//             value = {post}\n//             placeholder='Post'\n//             onChangeText = {(post) => this.setState({posts:post})}\n//           />\n//         </View>\n//     )\n//   }\n// }\n\n// // const mapStateToProps = (store) => ({\n// //   currentUser: store\n// // })\n\n// // const mapDispatchToProps = (dispatch) => bindActionCreators({onUserLogin}, dispatch)\n\n// // export default connect(null, mapDispatchProps)(Dashboard)\n// // // export default connect(mapStateToProps, mapDispatchProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}